{
  "graph": {
    "nodes": {
      "@razvolution/shared-workspace-contracts": {
        "name": "@razvolution/shared-workspace-contracts",
        "type": "lib",
        "data": {
          "root": "shared/workspace-contracts",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "shared/workspace-contracts",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{workspaceRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/shared/workspace-contracts",
                "main": "shared/workspace-contracts/src/index.ts",
                "tsConfig": "shared/workspace-contracts/tsconfig.lib.json",
                "assets": []
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @razvolution/shared-workspace-contracts --includeDependentProjects -- pnpm exec nx build-deps @razvolution/shared-workspace-contracts"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "shared/workspace-contracts",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@razvolution/shared-workspace-contracts",
          "tags": [
            "npm:private",
            "scope:shared",
            "type:contract"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/shared-workspace-contracts",
              "packageVersion": "0.0.1",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "shared/workspace-contracts/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@razvolution/shared-commerce-contracts": {
        "name": "@razvolution/shared-commerce-contracts",
        "type": "lib",
        "data": {
          "root": "shared/commerce-contracts",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "shared/commerce-contracts",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{workspaceRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/shared/commerce-contracts",
                "main": "shared/commerce-contracts/src/index.ts",
                "tsConfig": "shared/commerce-contracts/tsconfig.lib.json",
                "assets": [
                  "shared/commerce-contracts/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @razvolution/shared-commerce-contracts --includeDependentProjects -- pnpm exec nx build-deps @razvolution/shared-commerce-contracts"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "shared/commerce-contracts",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/shared/commerce-contracts/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "shared/commerce-contracts",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}\\test-output\\jest\\coverage"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            }
          },
          "name": "@razvolution/shared-commerce-contracts",
          "tags": [
            "npm:private",
            "scope:shared",
            "type:contract"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/shared-commerce-contracts",
              "packageVersion": "0.0.1",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "shared/commerce-contracts/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@razvolution/shared-content-contracts": {
        "name": "@razvolution/shared-content-contracts",
        "type": "lib",
        "data": {
          "root": "shared/content-contracts",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "shared/content-contracts",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{workspaceRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/shared/content-contracts",
                "main": "shared/content-contracts/src/index.ts",
                "tsConfig": "shared/content-contracts/tsconfig.lib.json",
                "assets": [
                  "shared/content-contracts/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @razvolution/shared-content-contracts --includeDependentProjects -- pnpm exec nx build-deps @razvolution/shared-content-contracts"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "shared/content-contracts",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/shared/content-contracts/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "shared/content-contracts",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}\\test-output\\jest\\coverage"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            }
          },
          "name": "@razvolution/shared-content-contracts",
          "tags": [
            "npm:private",
            "scope:shared",
            "type:contract"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/shared-content-contracts",
              "packageVersion": "0.0.1",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "shared/content-contracts/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@razvolution/shared-rewards-contracts": {
        "name": "@razvolution/shared-rewards-contracts",
        "type": "lib",
        "data": {
          "root": "shared/rewards-contracts",
          "targets": {
            "lint": {
              "cache": true,
              "options": {
                "cwd": "shared/rewards-contracts",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/shared/rewards-contracts/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "shared/rewards-contracts",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}\\test-output\\jest\\coverage"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            },
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "options": {
                "cwd": "shared/rewards-contracts",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{workspaceRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/shared/rewards-contracts",
                "main": "shared/rewards-contracts/src/index.ts",
                "tsConfig": "shared/rewards-contracts/tsconfig.lib.json",
                "assets": [
                  "shared/rewards-contracts/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          "name": "@razvolution/shared-rewards-contracts",
          "tags": [
            "npm:private",
            "scope:shared",
            "type:contract"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/rewards-contracts",
              "packageVersion": "0.0.1",
              "packageExports": {
                ".": {
                  "types": "./src/index.ts",
                  "import": "./src/index.ts",
                  "default": "./src/index.ts"
                },
                "./package.json": "./package.json"
              },
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "shared/rewards-contracts/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@razvolution/shared-auth-contracts": {
        "name": "@razvolution/shared-auth-contracts",
        "type": "lib",
        "data": {
          "root": "shared/auth-contracts",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "shared/auth-contracts",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{workspaceRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/shared/auth-contracts",
                "main": "shared/auth-contracts/src/index.ts",
                "tsConfig": "shared/auth-contracts/tsconfig.lib.json",
                "assets": [
                  "shared/auth-contracts/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @razvolution/shared-auth-contracts --includeDependentProjects -- pnpm exec nx build-deps @razvolution/shared-auth-contracts"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "shared/auth-contracts",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/shared/auth-contracts/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "shared/auth-contracts",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}\\coverage\\shared\\auth-contracts"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            }
          },
          "name": "@razvolution/shared-auth-contracts",
          "tags": [
            "npm:private",
            "scope:shared",
            "type:contract"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/shared-auth-contracts",
              "packageVersion": "0.0.1",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "shared/auth-contracts/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@razvolution/shared-i18n-contracts": {
        "name": "@razvolution/shared-i18n-contracts",
        "type": "lib",
        "data": {
          "root": "shared/i18n-contracts",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "shared/i18n-contracts",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{workspaceRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/shared/i18n-contracts",
                "main": "shared/i18n-contracts/src/index.ts",
                "tsConfig": "shared/i18n-contracts/tsconfig.lib.json",
                "assets": [
                  "shared/i18n-contracts/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @razvolution/shared-i18n-contracts --includeDependentProjects -- pnpm exec nx build-deps @razvolution/shared-i18n-contracts"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "shared/i18n-contracts",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/shared/i18n-contracts/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "shared/i18n-contracts",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}\\test-output\\jest\\coverage"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            }
          },
          "name": "@razvolution/shared-i18n-contracts",
          "tags": [
            "npm:private",
            "scope:shared",
            "type:contract"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/shared-i18n-contracts",
              "packageVersion": "0.0.1",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "shared/i18n-contracts/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@razvolution/shared-ai-contracts": {
        "name": "@razvolution/shared-ai-contracts",
        "type": "lib",
        "data": {
          "root": "shared/ai-contracts",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "shared/ai-contracts",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{workspaceRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/shared/ai-contracts",
                "main": "shared/ai-contracts/src/index.ts",
                "tsConfig": "shared/ai-contracts/tsconfig.lib.json",
                "assets": [
                  "shared/ai-contracts/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @razvolution/shared-ai-contracts --includeDependentProjects -- pnpm exec nx build-deps @razvolution/shared-ai-contracts"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "shared/ai-contracts",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/shared/ai-contracts/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "shared/ai-contracts",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}\\test-output\\jest\\coverage"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            }
          },
          "name": "@razvolution/shared-ai-contracts",
          "tags": [
            "npm:private",
            "scope:shared",
            "type:contract"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/ai-contracts",
              "packageVersion": "0.0.1",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "shared/ai-contracts/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@razvolution/features-community": {
        "name": "@razvolution/features-community",
        "type": "lib",
        "data": {
          "root": "features/community",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "features/community",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{workspaceRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/features/community",
                "main": "features/community/src/index.ts",
                "tsConfig": "features/community/tsconfig.lib.json",
                "assets": [
                  "features/community/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @razvolution/features-community --includeDependentProjects -- pnpm exec nx build-deps @razvolution/features-community"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "features/community",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/features/community/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "features/community",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}\\test-output\\jest\\coverage"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@razvolution/features-community",
          "tags": [
            "npm:public",
            "scope:feature",
            "type:content"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/community",
              "packageVersion": "0.0.1",
              "packageExports": {
                ".": {
                  "types": "./src/index.ts",
                  "import": "./src/index.ts",
                  "default": "./src/index.ts"
                },
                "./package.json": "./package.json"
              },
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "features/community/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@razvolution/features-marketing": {
        "name": "@razvolution/features-marketing",
        "type": "lib",
        "data": {
          "root": "features/marketing",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "features/marketing",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{workspaceRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/features/marketing",
                "main": "features/marketing/src/index.ts",
                "tsConfig": "features/marketing/tsconfig.lib.json",
                "assets": [
                  "features/marketing/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @razvolution/features-marketing --includeDependentProjects -- pnpm exec nx build-deps @razvolution/features-marketing"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "features/marketing",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/features/marketing/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "features/marketing",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}\\test-output\\jest\\coverage"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@razvolution/features-marketing",
          "tags": [
            "npm:public",
            "scope:feature",
            "type:marketing"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/marketing",
              "packageVersion": "0.0.1",
              "packageExports": {
                ".": {
                  "types": "./src/index.ts",
                  "import": "./src/index.ts",
                  "default": "./src/index.ts"
                },
                "./package.json": "./package.json"
              },
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "features/marketing/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@razvolution/features-workspace": {
        "name": "@razvolution/features-workspace",
        "type": "lib",
        "data": {
          "root": "features/workspace",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "features/workspace",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{workspaceRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/features/workspace",
                "main": "features/workspace/src/index.ts",
                "tsConfig": "features/workspace/tsconfig.lib.json",
                "assets": [
                  "features/workspace/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @razvolution/features-workspace --includeDependentProjects -- pnpm exec nx build-deps @razvolution/features-workspace"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "features/workspace",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "features/workspace",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}\\coverage\\features\\workspace"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            }
          },
          "name": "@razvolution/features-workspace",
          "tags": [
            "npm:private",
            "scope:feature",
            "type:workspace"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/features-workspace",
              "packageVersion": "0.0.1",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "features/workspace/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@razvolution/shared-data-access": {
        "name": "@razvolution/shared-data-access",
        "type": "lib",
        "data": {
          "root": "shared/data-access",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "shared/data-access",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{workspaceRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/shared/data-access",
                "main": "shared/data-access/src/index.ts",
                "tsConfig": "shared/data-access/tsconfig.lib.json",
                "assets": [
                  "shared/data-access/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @razvolution/shared-data-access --includeDependentProjects -- pnpm exec nx build-deps @razvolution/shared-data-access"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "shared/data-access",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/shared/data-access/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "shared/data-access",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}\\coverage\\shared\\data-access"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            }
          },
          "name": "@razvolution/shared-data-access",
          "tags": [
            "npm:private",
            "scope:shared",
            "type:data-access"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/shared-data-access",
              "packageVersion": "0.0.1",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "shared/data-access/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@razvolution/features-checkout": {
        "name": "@razvolution/features-checkout",
        "type": "lib",
        "data": {
          "root": "features/checkout",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "features/checkout",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{workspaceRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/features/checkout",
                "main": "features/checkout/src/index.ts",
                "tsConfig": "features/checkout/tsconfig.lib.json",
                "assets": [
                  "features/checkout/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @razvolution/features-checkout --includeDependentProjects -- pnpm exec nx build-deps @razvolution/features-checkout"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "features/checkout",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/features/checkout/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "features/checkout",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}\\test-output\\jest\\coverage"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@razvolution/features-checkout",
          "tags": [
            "npm:public",
            "scope:feature",
            "type:commerce"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/checkout",
              "packageVersion": "0.0.1",
              "packageExports": {
                ".": {
                  "types": "./src/index.ts",
                  "import": "./src/index.ts",
                  "default": "./src/index.ts"
                },
                "./package.json": "./package.json"
              },
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "features/checkout/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@razvolution/shared-test-utils": {
        "name": "@razvolution/shared-test-utils",
        "type": "lib",
        "data": {
          "root": "shared/test-utils",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "shared/test-utils",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{workspaceRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/shared/test-utils",
                "main": "shared/test-utils/src/index.ts",
                "tsConfig": "shared/test-utils/tsconfig.lib.json",
                "assets": [
                  "shared/test-utils/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @razvolution/shared-test-utils --includeDependentProjects -- pnpm exec nx build-deps @razvolution/shared-test-utils"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "shared/test-utils",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/shared/test-utils/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "shared/test-utils",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}\\coverage\\shared\\test-utils"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            }
          },
          "name": "@razvolution/shared-test-utils",
          "tags": [
            "npm:private",
            "scope:shared",
            "type:utility-test"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/shared-test-utils",
              "packageVersion": "0.0.1",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "shared/test-utils/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@razvolution/features-ai-chat": {
        "name": "@razvolution/features-ai-chat",
        "type": "lib",
        "data": {
          "root": "features/ai-chat",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "features/ai-chat",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{workspaceRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/features/ai-chat",
                "main": "features/ai-chat/src/index.ts",
                "tsConfig": "features/ai-chat/tsconfig.lib.json",
                "assets": [
                  "features/ai-chat/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @razvolution/features-ai-chat --includeDependentProjects -- pnpm exec nx build-deps @razvolution/features-ai-chat"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "features/ai-chat",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/features/ai-chat/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "features/ai-chat",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}\\test-output\\jest\\coverage"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@razvolution/features-ai-chat",
          "tags": [
            "npm:public",
            "scope:feature",
            "type:ai"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/ai-chat",
              "packageVersion": "0.0.1",
              "packageExports": {
                ".": {
                  "types": "./src/index.ts",
                  "import": "./src/index.ts",
                  "default": "./src/index.ts"
                },
                "./package.json": "./package.json"
              },
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "features/ai-chat/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@razvolution/features-product": {
        "name": "@razvolution/features-product",
        "type": "lib",
        "data": {
          "root": "features/product",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "features/product",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{workspaceRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/features/product",
                "main": "features/product/src/index.ts",
                "tsConfig": "features/product/tsconfig.lib.json",
                "assets": [
                  "features/product/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @razvolution/features-product --includeDependentProjects -- pnpm exec nx build-deps @razvolution/features-product"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "features/product",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/features/product/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "features/product",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}\\test-output\\jest\\coverage"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@razvolution/features-product",
          "tags": [
            "npm:public",
            "scope:feature",
            "type:commerce"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/product",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "features/product/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@razvolution/features-rewards": {
        "name": "@razvolution/features-rewards",
        "type": "lib",
        "data": {
          "root": "features/rewards",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "features/rewards",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{workspaceRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/features/rewards",
                "main": "features/rewards/src/index.ts",
                "tsConfig": "features/rewards/tsconfig.lib.json",
                "assets": [
                  "features/rewards/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @razvolution/features-rewards --includeDependentProjects -- pnpm exec nx build-deps @razvolution/features-rewards"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "features/rewards",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/features/rewards/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "features/rewards",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}\\test-output\\jest\\coverage"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@razvolution/features-rewards",
          "tags": [
            "npm:public",
            "scope:feature",
            "type:engagement"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/rewards",
              "packageVersion": "0.0.1",
              "packageExports": {
                ".": {
                  "types": "./src/index.ts",
                  "import": "./src/index.ts",
                  "default": "./src/index.ts"
                },
                "./package.json": "./package.json"
              },
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "features/rewards/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@razvolution/shared-db-types": {
        "name": "@razvolution/shared-db-types",
        "type": "lib",
        "data": {
          "root": "shared/db-types",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "shared/db-types",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{workspaceRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/shared/db-types",
                "main": "shared/db-types/src/index.ts",
                "tsConfig": "shared/db-types/tsconfig.lib.json",
                "assets": []
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @razvolution/shared-db-types --includeDependentProjects -- pnpm exec nx build-deps @razvolution/shared-db-types"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "shared/db-types",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@razvolution/shared-db-types",
          "tags": [
            "npm:private",
            "scope:shared",
            "type:contract"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/shared-db-types",
              "packageVersion": "0.0.1",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "shared/db-types/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@razvolution/shared-payments": {
        "name": "@razvolution/shared-payments",
        "type": "lib",
        "data": {
          "root": "shared/payments",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "shared/payments",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{workspaceRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/shared/payments",
                "main": "shared/payments/src/index.ts",
                "tsConfig": "shared/payments/tsconfig.lib.json",
                "assets": [
                  "shared/payments/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @razvolution/shared-payments --includeDependentProjects -- pnpm exec nx build-deps @razvolution/shared-payments"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "shared/payments",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/shared/payments/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "shared/payments",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}\\test-output\\jest\\coverage"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            }
          },
          "name": "@razvolution/shared-payments",
          "tags": [
            "npm:private",
            "scope:shared",
            "type:data-access"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/shared-payments",
              "packageVersion": "0.0.1",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "shared/payments/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@razvolution/shared-shipping": {
        "name": "@razvolution/shared-shipping",
        "type": "lib",
        "data": {
          "root": "shared/shipping",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "shared/shipping",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{workspaceRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/shared/shipping",
                "main": "shared/shipping/src/index.ts",
                "tsConfig": "shared/shipping/tsconfig.lib.json",
                "assets": [
                  "shared/shipping/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @razvolution/shared-shipping --includeDependentProjects -- pnpm exec nx build-deps @razvolution/shared-shipping"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "shared/shipping",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/shared/shipping/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "shared/shipping",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}\\test-output\\jest\\coverage"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            }
          },
          "name": "@razvolution/shared-shipping",
          "tags": [
            "npm:private",
            "scope:shared",
            "type:data-access"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/shipping",
              "packageVersion": "0.0.1",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "shared/shipping/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@razvolution/shared-supabase": {
        "name": "@razvolution/shared-supabase",
        "type": "lib",
        "data": {
          "root": "shared/supabase",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "shared/supabase",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{workspaceRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/shared/supabase",
                "main": "shared/supabase/src/index.ts",
                "tsConfig": "shared/supabase/tsconfig.lib.json",
                "assets": [
                  "shared/supabase/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @razvolution/shared-supabase --includeDependentProjects -- pnpm exec nx build-deps @razvolution/shared-supabase"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "shared/supabase",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/shared/supabase/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "shared/supabase",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            }
          },
          "name": "@razvolution/shared-supabase",
          "tags": [
            "npm:private",
            "scope:shared",
            "type:data-access"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/shared-supabase",
              "packageVersion": "0.0.1",
              "packageExports": {
                ".": "./src/index.js",
                "./server": "./src/lib/server.ts"
              },
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "shared/supabase/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@razvolution/shared-logging": {
        "name": "@razvolution/shared-logging",
        "type": "lib",
        "data": {
          "root": "shared/logging",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "shared/logging",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{workspaceRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/shared/logging",
                "main": "shared/logging/src/index.ts",
                "tsConfig": "shared/logging/tsconfig.lib.json",
                "assets": [
                  "shared/logging/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @razvolution/shared-logging --includeDependentProjects -- pnpm exec nx build-deps @razvolution/shared-logging"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "shared/logging",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/shared/logging/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "shared/logging",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}\\coverage\\shared\\logging"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            }
          },
          "name": "@razvolution/shared-logging",
          "tags": [
            "npm:private",
            "scope:shared",
            "type:observability"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/shared-logging",
              "packageVersion": "0.0.1",
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "shared/logging/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@razvolution/shared-shopify": {
        "name": "@razvolution/shared-shopify",
        "type": "lib",
        "data": {
          "root": "shared/shopify",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "shared/shopify",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{workspaceRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/shared/shopify",
                "main": "shared/shopify/src/index.ts",
                "tsConfig": "shared/shopify/tsconfig.lib.json",
                "assets": [
                  "shared/shopify/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @razvolution/shared-shopify --includeDependentProjects -- pnpm exec nx build-deps @razvolution/shared-shopify"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "shared/shopify",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/shared/shopify/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "shared/shopify",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}\\test-output\\jest\\coverage"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            }
          },
          "name": "@razvolution/shared-shopify",
          "tags": [
            "npm:private",
            "scope:shared",
            "type:data-access"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/shared-shopify",
              "packageVersion": "0.0.1",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "shared/shopify/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@razvolution/features-auth": {
        "name": "@razvolution/features-auth",
        "type": "lib",
        "data": {
          "root": "features/auth",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "features/auth",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{workspaceRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/features/auth",
                "main": "features/auth/src/index.ts",
                "tsConfig": "features/auth/tsconfig.lib.json",
                "assets": [
                  "features/auth/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @razvolution/features-auth --includeDependentProjects -- pnpm exec nx build-deps @razvolution/features-auth"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "features/auth",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/features/auth/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "features/auth",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}\\coverage\\features\\auth"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            }
          },
          "name": "@razvolution/features-auth",
          "tags": [
            "npm:private",
            "scope:feature",
            "type:auth"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/features-auth",
              "packageVersion": "0.0.1",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "features/auth/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@razvolution/features-cart": {
        "name": "@razvolution/features-cart",
        "type": "lib",
        "data": {
          "root": "features/cart",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "features/cart",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{workspaceRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/features/cart",
                "main": "features/cart/src/index.ts",
                "tsConfig": "features/cart/tsconfig.lib.json",
                "assets": [
                  "features/cart/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @razvolution/features-cart --includeDependentProjects -- pnpm exec nx build-deps @razvolution/features-cart"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "features/cart",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/features/cart/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "features/cart",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}\\test-output\\jest\\coverage"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@razvolution/features-cart",
          "tags": [
            "npm:public",
            "scope:feature",
            "type:commerce"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/cart",
              "packageVersion": "0.0.1",
              "packageExports": {
                ".": {
                  "types": "./src/index.ts",
                  "import": "./src/index.ts",
                  "default": "./src/index.ts"
                },
                "./package.json": "./package.json"
              },
              "packageMain": "./src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "features/cart/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@razvolution/shared-config": {
        "name": "@razvolution/shared-config",
        "type": "lib",
        "data": {
          "root": "shared/config",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "shared/config",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{workspaceRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/shared/config",
                "main": "shared/config/src/index.ts",
                "tsConfig": "shared/config/tsconfig.lib.json",
                "assets": [
                  "shared/config/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @razvolution/shared-config --includeDependentProjects -- pnpm exec nx build-deps @razvolution/shared-config"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "shared/config",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/shared/config/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "shared/config",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}\\test-output\\jest\\coverage"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@razvolution/shared-config",
          "tags": [
            "npm:public",
            "scope:shared",
            "type:config"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/shared-config",
              "packageVersion": "0.0.1",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "shared/config/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@razvolution/shared-utils": {
        "name": "@razvolution/shared-utils",
        "type": "lib",
        "data": {
          "root": "shared/utils",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "shared/utils",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{workspaceRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/shared/utils",
                "main": "shared/utils/src/index.ts",
                "tsConfig": "shared/utils/tsconfig.lib.json",
                "assets": [
                  "shared/utils/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @razvolution/shared-utils --includeDependentProjects -- pnpm exec nx build-deps @razvolution/shared-utils"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "shared/utils",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/shared/utils/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "shared/utils",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}\\coverage\\shared\\utils"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            }
          },
          "name": "@razvolution/shared-utils",
          "tags": [
            "npm:private",
            "scope:shared",
            "type:utility"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/shared-utils",
              "packageVersion": "0.0.1",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "shared/utils/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@razvolution/shared-i18n": {
        "name": "@razvolution/shared-i18n",
        "type": "lib",
        "data": {
          "root": "shared/i18n",
          "name": "@razvolution/shared-i18n",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "shared/i18n/src",
          "projectType": "library",
          "tags": [
            "scope:shared",
            "type:i18n"
          ],
          "targets": {
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/shared/i18n",
                "main": "shared/i18n/src/index.ts",
                "tsConfig": "shared/i18n/tsconfig.lib.json",
                "assets": [
                  {
                    "glob": "**/*.json",
                    "input": "shared/i18n/src/",
                    "output": "./"
                  }
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            }
          },
          "implicitDependencies": []
        }
      },
      "apps-store": {
        "name": "apps-store",
        "type": "app",
        "data": {
          "root": "apps/store",
          "targets": {
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/next:build",
              "outputs": [
                "{options.outputPath}"
              ],
              "defaultConfiguration": "production",
              "options": {
                "outputPath": "dist/apps/store"
              },
              "configurations": {
                "development": {
                  "outputPath": "apps/store"
                },
                "production": {}
              },
              "parallelism": true
            },
            "serve": {
              "executor": "@nx/next:server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "apps-store:build",
                "dev": true
              },
              "configurations": {
                "development": {
                  "buildTarget": "apps-store:build:development",
                  "dev": true
                },
                "production": {
                  "buildTarget": "apps-store:build:production",
                  "dev": false
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "apps/store/jest.config.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            }
          },
          "name": "apps-store",
          "tags": [
            "npm:private",
            "scope:app",
            "type:web"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/store",
              "packageVersion": "0.0.1",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/store",
          "projectType": "application",
          "implicitDependencies": []
        }
      },
      "@razvolution/shared-ui": {
        "name": "@razvolution/shared-ui",
        "type": "lib",
        "data": {
          "root": "shared/ui",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "shared/ui",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{workspaceRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/shared/ui",
                "main": "shared/ui/src/index.ts",
                "tsConfig": "shared/ui/tsconfig.lib.json",
                "assets": [
                  "shared/ui/*.md"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @razvolution/shared-ui --includeDependentProjects -- pnpm exec nx build-deps @razvolution/shared-ui"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "shared/ui",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/shared/ui/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "shared/ui",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}\\test-output\\jest\\coverage"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            }
          },
          "name": "@razvolution/shared-ui",
          "tags": [
            "npm:private",
            "scope:shared",
            "type:ui"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/shared-ui",
              "packageVersion": "0.0.1",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "shared/ui/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@razvolution/tools": {
        "name": "@razvolution/tools",
        "type": "lib",
        "data": {
          "root": "tools",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "build",
                "^typecheck"
              ],
              "options": {
                "cwd": "tools",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "!{workspaceRoot}/node_modules",
                "!{workspaceRoot}/tmp",
                "!{workspaceRoot}/dist",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/tools",
                "main": "tools/src/index.ts",
                "tsConfig": "tools/tsconfig.lib.json",
                "generatePackageJson": true,
                "assets": [
                  "tools/generators.json",
                  {
                    "input": "./tools/src/generators",
                    "glob": "**/schema.json",
                    "output": "./generators"
                  }
                ]
              },
              "configurations": {},
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @razvolution/tools --includeDependentProjects -- pnpm exec nx build-deps @razvolution/tools"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "tools",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "tools",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": [
                  "jest"
                ],
                "description": "Run Jest Tests",
                "help": {
                  "command": "pnpm exec jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}\\jest.preset.js",
                {
                  "externalDependencies": [
                    "jest"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}\\test-output\\jest\\coverage"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": [
                "^build"
              ]
            }
          },
          "name": "@razvolution/tools",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/tools",
              "packageVersion": "0.0.1",
              "packageMain": "./src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "tools/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@razvolution/source": {
        "name": "@razvolution/source",
        "type": "app",
        "data": {
          "root": ".",
          "name": "@razvolution/source",
          "includedScripts": [],
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@razvolution/source",
              "packageVersion": "1.0.0",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "local-registry": {
              "executor": "@nx/js:verdaccio",
              "options": {
                "port": 4873,
                "config": ".verdaccio/config.yml",
                "storage": "tmp/local-registry/storage"
              },
              "configurations": {},
              "parallelism": true,
              "continuous": true
            },
            "generate-icons": {
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm nx g @razvolution/tools:generate-icons"
              },
              "dependsOn": [
                {
                  "target": "build",
                  "project": "tools"
                }
              ],
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      }
    },
    "dependencies": {
      "@razvolution/shared-workspace-contracts": [
        {
          "source": "@razvolution/shared-workspace-contracts",
          "target": "@razvolution/shared-db-types",
          "type": "static"
        }
      ],
      "@razvolution/shared-commerce-contracts": [],
      "@razvolution/shared-content-contracts": [],
      "@razvolution/shared-rewards-contracts": [],
      "@razvolution/shared-auth-contracts": [],
      "@razvolution/shared-i18n-contracts": [],
      "@razvolution/shared-ai-contracts": [],
      "@razvolution/features-community": [],
      "@razvolution/features-marketing": [
        {
          "source": "@razvolution/features-marketing",
          "target": "@razvolution/shared-logging",
          "type": "static"
        },
        {
          "source": "@razvolution/features-marketing",
          "target": "@razvolution/shared-ui",
          "type": "static"
        },
        {
          "source": "@razvolution/features-marketing",
          "target": "@razvolution/shared-utils",
          "type": "static"
        }
      ],
      "@razvolution/features-workspace": [
        {
          "source": "@razvolution/features-workspace",
          "target": "@razvolution/shared-utils",
          "type": "static"
        }
      ],
      "@razvolution/shared-data-access": [
        {
          "source": "@razvolution/shared-data-access",
          "target": "@razvolution/shared-auth-contracts",
          "type": "static"
        },
        {
          "source": "@razvolution/shared-data-access",
          "target": "@razvolution/shared-logging",
          "type": "static"
        },
        {
          "source": "@razvolution/shared-data-access",
          "target": "@razvolution/shared-supabase",
          "type": "static"
        },
        {
          "source": "@razvolution/shared-data-access",
          "target": "@razvolution/shared-utils",
          "type": "static"
        },
        {
          "source": "@razvolution/shared-data-access",
          "target": "@razvolution/shared-payments",
          "type": "static"
        },
        {
          "source": "@razvolution/shared-data-access",
          "target": "@razvolution/shared-shopify",
          "type": "static"
        },
        {
          "source": "@razvolution/shared-data-access",
          "target": "@razvolution/shared-db-types",
          "type": "static"
        }
      ],
      "@razvolution/features-checkout": [],
      "@razvolution/shared-test-utils": [],
      "@razvolution/features-ai-chat": [],
      "@razvolution/features-product": [
        {
          "source": "@razvolution/features-product",
          "target": "@razvolution/shared-logging",
          "type": "static"
        },
        {
          "source": "@razvolution/features-product",
          "target": "@razvolution/shared-ui",
          "type": "static"
        },
        {
          "source": "@razvolution/features-product",
          "target": "@razvolution/shared-utils",
          "type": "static"
        },
        {
          "source": "@razvolution/features-product",
          "target": "@razvolution/shared-commerce-contracts",
          "type": "static"
        }
      ],
      "@razvolution/features-rewards": [],
      "@razvolution/shared-db-types": [],
      "@razvolution/shared-payments": [],
      "@razvolution/shared-shipping": [
        {
          "source": "@razvolution/shared-shipping",
          "target": "@razvolution/shared-logging",
          "type": "static"
        }
      ],
      "@razvolution/shared-supabase": [
        {
          "source": "@razvolution/shared-supabase",
          "target": "@razvolution/shared-db-types",
          "type": "static"
        },
        {
          "source": "@razvolution/shared-supabase",
          "target": "@razvolution/shared-logging",
          "type": "static"
        }
      ],
      "@razvolution/shared-logging": [
        {
          "source": "@razvolution/shared-logging",
          "target": "@razvolution/shared-db-types",
          "type": "static"
        }
      ],
      "@razvolution/shared-shopify": [
        {
          "source": "@razvolution/shared-shopify",
          "target": "@razvolution/shared-logging",
          "type": "static"
        },
        {
          "source": "@razvolution/shared-shopify",
          "target": "@razvolution/shared-commerce-contracts",
          "type": "static"
        }
      ],
      "@razvolution/features-auth": [
        {
          "source": "@razvolution/features-auth",
          "target": "@razvolution/shared-supabase",
          "type": "static"
        },
        {
          "source": "@razvolution/features-auth",
          "target": "@razvolution/shared-ui",
          "type": "static"
        },
        {
          "source": "@razvolution/features-auth",
          "target": "@razvolution/shared-utils",
          "type": "static"
        },
        {
          "source": "@razvolution/features-auth",
          "target": "@razvolution/shared-i18n-contracts",
          "type": "static"
        },
        {
          "source": "@razvolution/features-auth",
          "target": "@razvolution/features-workspace",
          "type": "static"
        },
        {
          "source": "@razvolution/features-auth",
          "target": "@razvolution/shared-logging",
          "type": "static"
        },
        {
          "source": "@razvolution/features-auth",
          "target": "@razvolution/shared-auth-contracts",
          "type": "static"
        },
        {
          "source": "@razvolution/features-auth",
          "target": "@razvolution/shared-data-access",
          "type": "static"
        },
        {
          "source": "@razvolution/features-auth",
          "target": "@razvolution/shared-db-types",
          "type": "static"
        }
      ],
      "@razvolution/features-cart": [],
      "@razvolution/shared-config": [],
      "@razvolution/shared-utils": [],
      "@razvolution/shared-i18n": [],
      "apps-store": [
        {
          "source": "apps-store",
          "target": "@razvolution/features-auth",
          "type": "static"
        },
        {
          "source": "apps-store",
          "target": "@razvolution/shared-db-types",
          "type": "static"
        },
        {
          "source": "apps-store",
          "target": "@razvolution/shared-i18n-contracts",
          "type": "static"
        },
        {
          "source": "apps-store",
          "target": "@razvolution/shared-logging",
          "type": "static"
        },
        {
          "source": "apps-store",
          "target": "@razvolution/shared-supabase",
          "type": "static"
        },
        {
          "source": "apps-store",
          "target": "@razvolution/shared-ui",
          "type": "static"
        },
        {
          "source": "apps-store",
          "target": "@razvolution/shared-utils",
          "type": "static"
        },
        {
          "source": "apps-store",
          "target": "@razvolution/shared-data-access",
          "type": "static"
        },
        {
          "source": "apps-store",
          "target": "@razvolution/features-workspace",
          "type": "static"
        }
      ],
      "@razvolution/shared-ui": [
        {
          "source": "@razvolution/shared-ui",
          "target": "@razvolution/shared-utils",
          "type": "static"
        },
        {
          "source": "@razvolution/shared-ui",
          "target": "@razvolution/shared-logging",
          "type": "static"
        },
        {
          "source": "@razvolution/shared-ui",
          "target": "@razvolution/shared-i18n-contracts",
          "type": "static"
        }
      ],
      "@razvolution/tools": [],
      "@razvolution/source": []
    }
  }
}